apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'groovy'

group = 'it.unibas'
version = '1.0-SNAPSHOT'

description = "CampoMinato XP"

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenCentral()
}
//    mavenLocal()
//    maven { 
//        url "http://repo.maven.apache.org/maven2" 
//    }

dependencies {
    compile fileTree(dir: 'ant lib', include: '*.jar')
    compile group: 'commons-logging', name: 'commons-logging', version:'1.1.3'
    testCompile group: 'junit', name: 'junit', version:'3.8.1'
}
    
configure([compileGroovy, compileTestGroovy]) {
    groovyOptions.fork(memoryInitialSize: '128M', memoryMaximumSize: '1G')
    groovyOptions.encoding = "UTF-8"
}

configure([compileJava, compileTestJava]) {
    options.deprecation = true
    options.debug = true
}

//Copies the compile jars on libs dir
task copyToLib(type: Copy) {
    into "$buildDir/libs"
    from configurations.compile
}

//Usefull to include other than java files in source folders
sourceSets.main.resources.srcDir 'src/main/java'

metaInf << fileTree(dir: file('.'), includes: ['README.md'])

//Execute task copyToLib before build project
build.dependsOn(copyToLib)

//Creates the jar file
jar.doFirst {
    manifest {
        attributes("Main-Class": "it.unibas.ping.framework.Applicazione",
            "Built-By": System.properties['user.name'],
            "Created-By": System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
            'Implementation-Version': version,
            'Implementation-Vendor': 'it.unibas',
            'Implementation-Title': 'Campo Minato XP',
            "Class-Path" : configurations.compile.collect { it.getName() }.join(' ') 
        )
    }       
}

task distSource(type: Copy) {
    destinationDir = "$buildDir/distributions/source" as File
    from(project.file('.')) {
        exclude 'build'
        exclude '**/.git*'
        exclude '.git*'
        exclude '.gradle*'
        exclude '**/*.ipr'
        exclude '**/*.iws'
        exclude '**/*.iml'
    }
}

task zipSource(type: Zip) {
    description = "Zips the source distribution."
    dependsOn { distSource }
    classifier = 'src'
    into "campominato-$version"
    from "$buildDir/distributions/source"
}

task tarSource(type: Tar) {
    description = "Tars the source distribution."
    dependsOn { distSource }
    compression = Compression.GZIP
    classifier = 'src'
    into "campominato-$version"
    from "$buildDir/distributions/source"
}

task fullDist(dependsOn: [jar, zipSource, tarSource]) {
    description = "Assembles all packages."
}

//Declaring the gradle version to distribuite with the project
task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
    jarFile = 'gradle/wrapper/gradle-wrapper.jar'
}

artifacts {
    archives jar
}